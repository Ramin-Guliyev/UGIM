@page "/studentadd"
@inject StudentService StudentService
@inject ILocalStorageService LocalStorage
@inject NavigationManager navManager
@attribute [Authorize]
<div class="row">
    <div class="col-9">
        <center> <RadzenButton ButtonStyle="Radzen.ButtonStyle.Primary" Click="NavigateToStudentList">Sagird Siyahisi</RadzenButton></center>
        <EditForm Model="model" OnValidSubmit="addstudent">
            <RadzenCard>
                <DataAnnotationsValidator />
                <ValidationSummary />

                <label>Adi</label>
                <RadzenTextBox @bind-Value="model.Name"></RadzenTextBox>
                <label>Soyadi</label>
                <RadzenTextBox @bind-Value="model.LastName"></RadzenTextBox>
                <label>Atasinin adi</label>
                <RadzenTextBox @bind-Value="model.FatherName"></RadzenTextBox>
                <label>Mektebi</label>
                <RadzenTextBox @bind-Value="model.School"></RadzenTextBox>
                <label>Tevelludu</label>
                <RadzenNumeric @bind-Value="model.BirthYear"></RadzenNumeric>
                <label>Sinifi</label>
                <RadzenTextBox @bind-Value="model.Class"></RadzenTextBox>
                <label>Grup Nomresi</label>
                <RadzenNumeric @bind-Value="model.GroupNumber"></RadzenNumeric>
                <label>Ugim daxil olma ili</label>
                <RadzenNumeric @bind-Value="model.UgimYear"></RadzenNumeric>
                <hr />

                <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Add"
                              ButtonStyle="Radzen.ButtonStyle.Primary" />


            </RadzenCard>
        </EditForm>
    </div>
</div>


@code {
    private StudentAddModel model = new StudentAddModel();

    private async Task addstudent()
    {
        var accesstoken = await LocalStorage.GetItemAsync<string>("User");
        var responce = await StudentService.AddStudentAsync(model, accesstoken);

        if (responce.IsSuccess)
        {

            model = new StudentAddModel();


        }
    }
    void NavigateToStudentList()
    {
        navManager.NavigateTo($"/studentlist");
    }
}
